name: Update Repository Statistics

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main  # Run on pushes to main branch
    paths-ignore:
      - 'dynamic-implementation-guide'  # Ignore pushes that only change config.js to avoid infinite loops

jobs:
  update-stats-and-deploy:
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required
    permissions:
      pages: write
      id-token: write
      contents: write
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Update repository statistics
        run: |
          python .github/scripts/update_stats.py
          
      - name: Commit changes
        id: commit
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # Stage changes
          git add config.js
          
          # Check if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            # Pull latest changes with strategy to handle conflicts
            git pull --rebase origin main || git pull origin main
            
            # Commit changes
            git commit -m "Update repository statistics [skip ci]"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Push changes
        if: steps.commit.outputs.has_changes == 'true'
        run: |
          # Push with retry logic
          MAX_RETRIES=3
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            if git push; then
              echo "Successfully pushed changes"
              break
            else
              RETRY_COUNT=$((RETRY_COUNT+1))
              echo "Push failed, retry $RETRY_COUNT of $MAX_RETRIES"
              
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "Pulling latest changes before retrying..."
                git pull --rebase origin main || git pull origin main
                sleep 5
              fi
            fi
          done
          
          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Failed to push after $MAX_RETRIES attempts"
            exit 1
          fi
      
      # Setup and deploy Pages directly
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Deploy directly to gh-pages branch
        run: |
          # Verify files exist
          echo "Files to be deployed:"
          ls -la
          
          # Setup git for gh-pages
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Create or checkout gh-pages branch
          git checkout gh-pages 2>/dev/null || git checkout -b gh-pages
          
          # Copy necessary files from main branch
          git checkout main -- index.html config.js app.js styles.css || echo "Failed to checkout some files"
          
          # Add any files that might not exist yet but should be part of the site
          for file in index.html config.js app.js styles.css; do
            if [ ! -f "$file" ]; then
              echo "Creating placeholder for $file"
              echo "// Placeholder for $file - this file should be properly populated" > $file
              git add $file
            fi
          done
          
          # Commit and push to gh-pages branch
          git add .
          git commit -m "Update GitHub Pages content" || echo "No changes to commit"
          git push -f origin gh-pages

